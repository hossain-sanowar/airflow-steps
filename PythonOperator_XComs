https://airflow.apache.org/docs/apache-airflow/stable/index.html

I am going to show you how to use Airflow PythonOperator and XComs.
ğŸ‘‰ How to run a python function as a task using the python operator
ğŸ‘‰ How to pass parameters to the python function 
ğŸ‘‰ How to share values between different tasks using Xcoms

- Introduction and launch airflow using docker
- Create a new DAG file
- Using the python operator to run a python function
- Pass parameters using op_kwargs
- How XCom works
- Push and pull values using XCom
- Push multiple values using key and value
- Only share small values via XCom

```
from airflow import DAG
from datetime import datetime, timedelta
from airflow.operators.python import PythonOperator

default_args={
    'owner':'Sanowar',
    'retries':5,
    'retry_delay':timedelta(minutes=5)
}

def greet(ti):
    first_name=ti.xcom_pull(task_ids='get_name', key='first_name')
    last_name=ti.xcom_pull(task_ids='get_name', key='last_name')
    age=ti.xcom_pull(task_ids='get_age',key='age')
    print(f"Hello World! My name is {first_name}{last_name},"
          f"and I am {age} years old!")

def get_name(ti):
    ti.xcom_push(key='first_name',value='Jerry')
    ti.xcom_push(key='last_name',value='Fridman')

def get_age(ti):
    ti.xcom_push(key='age',value=19)

with DAG(
default_args=default_args,
dag_id='our_dag_with_python_operator_v05',
description='our first dag using python operator',
start_date=datetime(2022, 11,2),
schedule_interval='@daily'
) as dag:
    task1=PythonOperator(
        task_id='greet',
        python_callable=greet
        # op_kwargs={'age':30}
        )
    task2 =PythonOperator(
        task_id='get_name',
        python_callable=get_name
    )
    task3 =PythonOperator(
        task_id='get_age',
        python_callable=get_age
    )
    [task2, task3] >> task1
```
